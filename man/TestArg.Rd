% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AnnotateBACreads.R
\name{TestArg}
\alias{TestArg}
\title{Test the argument of a function}
\usage{
TestArg(avar, importFUN, expectedClass, ...)
}
\arguments{
\item{avar}{Either an object or a path to a file to import with \code{importFUN}}

\item{importFUN}{Function to import \code{avar} if it is a path. The function must return an object of class \code{expectedClass}}

\item{expectedClass}{Character vector. expected class of the object avar}
}
\value{
either NULL if \code{avar} is NULL or an object of class \code{expectedClass}
}
\description{
If the \code{avar} object is of the class \code{expectedClass}, then the function returns the \code{avar} object as is
  If \code{avar} is NULL, then the function returns NULL
  If \code{avar} is a character string corresponding to an existing file, then the file is imported using \code{importFUN}
  Else, the function stops and returns an error
}
\examples{
\donttest{
# With an object in R
TestArg(1:10, expectedClass = "integer") #returns 1:10
\dontrun{
TestArg(1:10, expectedClass = "character") #returns an error
}

#With a path to a file
Path2Blast <- system.file("extdata", "blastExample.tab", package = "NanoBAC")
TestArg(Path2Blast, readBlast, "tbl_df") #returns the imported file
\dontrun{
TestArg(Path2Blast, readBlast, "integer") #returns an error
}
}
}
